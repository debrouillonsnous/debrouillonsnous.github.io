{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About US Nous sommes comme de centaines d'autres d\u00e9brouillards. Ici, nous partageons ce que nous avons rencontr\u00e9 comme difficult\u00e9 sous forme de tutoriel pour que vous pussiez ne plus faire la m\u00eame erreur ou au moins savoir comment r\u00e9soudre le probl\u00e8me. Il y a plusieurs sujets tous m\u00e9langer du langage de programmation au github actions en passant par Docker, MQTT (IoT) que sur les tests. Ainsi chaque difficult\u00e9 rencontr\u00e9e par jour est r\u00e9pertori\u00e9 ici pour en faire un document pour les d\u00e9brouillards.","title":"About US"},{"location":"#about-us","text":"Nous sommes comme de centaines d'autres d\u00e9brouillards. Ici, nous partageons ce que nous avons rencontr\u00e9 comme difficult\u00e9 sous forme de tutoriel pour que vous pussiez ne plus faire la m\u00eame erreur ou au moins savoir comment r\u00e9soudre le probl\u00e8me. Il y a plusieurs sujets tous m\u00e9langer du langage de programmation au github actions en passant par Docker, MQTT (IoT) que sur les tests. Ainsi chaque difficult\u00e9 rencontr\u00e9e par jour est r\u00e9pertori\u00e9 ici pour en faire un document pour les d\u00e9brouillards.","title":"About US"},{"location":"MQTT/","text":"MQTT Utilis\u00e9 pour le transfert de Machine-to-Machine (M2M) , MQTT est consid\u00e9r\u00e9 comme l'un des principaux protocoles de messagerie de l'internet des objets, mais c\u00f4t\u00e9 industriel ( IoT) . Il est open source, l\u00e9ger ( en t\u00eate de messages de 2 octets ), faible utilisation de la bande passante du r\u00e9seau ( 93 fois plus rapides que le HTTP ), faible consommation d'\u00e9nergie ( 11 fois moins pour envoyer et 170 pour ne recevoir que le HTTP ) et fiable (m\u00e9canisme natif de Qos, acronyme de Quality of Service). Son autre avantage, c'est qu'il est extr\u00eamement facile \u00e0 mettre en \u0153uvre du c\u00f4t\u00e9 client. C'est donc la solution parfaite pour l'IoT. Attention cependant, fortement vuln\u00e9rable si certaines conditions de s\u00e9curit\u00e9 ne sont pas r\u00e9unies, comme l'absence de chiffrage sur la transmission & l'authentification (MQTT est capable d'\u00eatre d\u00e9ploy\u00e9 sans chiffrement TLS ou SSL.) Utilis\u00e9 par nombreux acteurs dans le monde Facebook, openstack, geospatial, Bosh, IBM, Adarfuit, EVERYTHING IoT, Google Home Assistant, Pimatic, MS Azure, certains syst\u00e8mes de signalisation, syst\u00e8mes d'alarme, l'industrie du Gaz, de l'\u00e9lectricit\u00e9 et bien plus encore. MQTT focntionne sur le principe de publication/abonnement (publish/subscribe) C\u2019est quoi un broker MQTT ? Vous pouvez envoyer une commande pour contr\u00f4ler une sortie ou vous pouvez la lire \u00e0 partir d'un capteur et la publier. Dans Mqtt, il y a quelques concepts de base que vous devez comprendre : publier et souscrire des messages, des topics et des broker. Le premier concept est le syst\u00e8me de publication et d'abonnement. Qu'est-ce que cela signifie ? Cela signifie que le dispositif peut publier des messages \u00e0 vos autres dispositifs ou votre dispositif peut s'abonner \u00e0 un sujet particulier.Pour recevoir ces messages, par exemple, le dispositif 1 publie sur un sujet, le dispositif 2 s'abonne au m\u00eame sujet que le dispositif 1 publie. Ainsi, le dispositif 2 re\u00e7oit le message. Les messages sont les informations que vous souhaitez \u00e9changer entre vos appareils, qu'il s'agisse d'une commande ou de donn\u00e9es avec le syst\u00e8me de publication/abonnement. Vous pouvez faire \u00e0 peu pr\u00e8s tout ce que vous voulez dans vos projets de mission en mode autonome. Un autre concept important est celui des topics. Les topics sont la fa\u00e7on dont vous enregistrez l'int\u00e9r\u00eat pour les messages entrants ou je vais sp\u00e9cifier o\u00f9 vous voulez publier votre message. votre message. Les topics sont repr\u00e9sent\u00e9s par des cha\u00eenes de caract\u00e8res s\u00e9par\u00e9es par des barres obliques. Les slashs indiquent le niveau du sujet, voici un exemple si vous cr\u00e9ez maintenant un sujet pour une lampe dans votre propre bureau (home/office/lamp). Par exemple, si vous souhaitez allumer votre lampe dans votre bureau \u00e0 la maison, vous publieriez un message dans un topic en utilisant node-red disant on et votre machine sera abonn\u00e9e \u00e0 ce m\u00eame sujet. Elle recevra donc le message on et allumera finalement la lampe. Les topics sont sensibles \u00e0 la casse : Ce qui fait que home/office/lamp et home/office/Lamp sont diff\u00e9rents. Faites attention au terme borker : le broker est principalement responsable de la r\u00e9ception de tous les messages. Le broker MQTT est un equipement intermediaire entre le publisher et l'abon\u00e9e, il filtre les messages pour d\u00e9cider qui est int\u00e9ress\u00e9 et publie ensuite le message aux clients abonn\u00e9s. Il y a plusieurs brokers que vous pouvez utiliser. Nous allons utiliser le broker mosquito que vous installerez sur votre raspberry pi. Installer Mosquitto sur Linux ou Raspberry Pi D'abord mettons \u00e0 jour notre syst\u00e8me avant d\u2019installer Mosquito ce n'est pas obligatoire mais recommand\u00e9. sudo apt update && apt upgrade Maintenant installons Mosquitto sudo apt install mosquitto Pour faire des tests il faut installer Mosquitto client sudo apt-get install mosquitto-clients Ici nos tests se baseront justes sur Lunix, si jamais vous voulez installer Mosquito pour Rasperry Pi , installer mosquitto_sub, mosquitto_pub et mosquitto_passwVous voulez faire du mosquito en python? Alors je vous conseille python-mosquitto Exemple de server pour vos test: Server de test Pour verifier l'insatllation systemctl status mosquitto Installer Mosquitto sur Windows ou macOS Pour Windows ou macos je vous recommande de t\u00e9l\u00e9charger et installer via ce lien S\u00e9curis\u00e9 Mosquitto Maintenant on a Mosquitto qui fonctionne bien sur notre machine. Mais pas s\u00e9curis\u00e9, maintenant s\u00e9curisons le! Creons un user avec un password Pour cela tapez cd /etc/mosquitto Vous n'avez pas besoin de vous identifier tant que vous ne faite pas une gestion de votre domotique DIY car pour la domotique vous serez amen\u00e9 \u00e0 s\u00e9curiser vos appareils car sinon tout le monde peut acc\u00e9der \u00e0 appareils(chauffage, climatisation, motorisation de volets roulants.....). Donc le mieux c'est de les prot\u00e9ger avec un mot de passe. sudo mosquitto_passwd -c /etc/mosquitto/passwd USER_NAME Afin de limiter l'acc\u00e8s aux utilisateurs \u00e0 un compte, modifiez le fichier de configuration. Pour cela tapez la commande: sudo /etc/mosquitto/mosquitto.conf Ajoutez ceci \u00e0 la fin du fichier allow_anonymous false password_file /etc/mosquitto/passwordfile Maintenant on redemarre Mosquitto systemctl restart mosquitto Publier (envoyer) un message MQTT depuis le terminal Pour publier un message on utilise la commande mosquitto_pub et pour connaitre les options li\u00e9es \u00e0 la commande on utilise mosquitto_pub -help -h spcifie le nom du broker sur le quel on se connecte (ou IP) -t spcifie le topic sur lequel le message est publi\u00e9 -P spcifie le mot de passe (optionnel) -m spcifie le message \u00e0 envoyer qui peut \u00eatre une valeur ou un JSON. -u spcifie le nom d\u2019utilisateur (optionnel) -p spcifie le port, qui par d\u00e9faut est 1883 Pour plus d'information voir documentation Exemple , on se connecte au serveur -h localhost sur le Topic -t news/football et on publie le message -m j'ai gagn\u00e9 le ballon d'or mosquitto_pub -h localhost -t news/football -m \"jai gagn\u00e9 le ballon d'or!\" Recevoir (souscrire) des messages Pour recevoir un message on utilise la commande mosquitto_sub et pour connaitre les options li\u00e9es \u00e0 la commande on utilise mosquitto_sub -help Ouvrez un second Terminal et ex\u00e9cutez la commande suivant. mosquitto_sub -h localhost -t news/football Exemple d'\u00e9change: \u00e0 gauche le publisher et \u00e0 droite le subscriber Conclusion Dans ce tutoriel nous avons parl\u00e9 des avantages et inconv\u00e9nients de MQTT. Nous avons install\u00e9 et test\u00e9 MQTT en utilisant le serveur mosquito sur Lunix. Pour ceux qui ont Windows ou macos nous les avons redirig\u00e9 vers la documentation de Mosquito. Rappelons que MQTT est un protocole TCP/IP utilis\u00e9 beaucoup dans l'IoT industriel.Il est le protocole parfait pour votre domotique et est super bien adapt\u00e9 au d\u00e9veloppement d\u2019objets connect\u00e9s vus sa rapidit\u00e9 et sa lergert\u00e9.","title":"MQTT"},{"location":"MQTT/#mqtt","text":"Utilis\u00e9 pour le transfert de Machine-to-Machine (M2M) , MQTT est consid\u00e9r\u00e9 comme l'un des principaux protocoles de messagerie de l'internet des objets, mais c\u00f4t\u00e9 industriel ( IoT) . Il est open source, l\u00e9ger ( en t\u00eate de messages de 2 octets ), faible utilisation de la bande passante du r\u00e9seau ( 93 fois plus rapides que le HTTP ), faible consommation d'\u00e9nergie ( 11 fois moins pour envoyer et 170 pour ne recevoir que le HTTP ) et fiable (m\u00e9canisme natif de Qos, acronyme de Quality of Service). Son autre avantage, c'est qu'il est extr\u00eamement facile \u00e0 mettre en \u0153uvre du c\u00f4t\u00e9 client. C'est donc la solution parfaite pour l'IoT. Attention cependant, fortement vuln\u00e9rable si certaines conditions de s\u00e9curit\u00e9 ne sont pas r\u00e9unies, comme l'absence de chiffrage sur la transmission & l'authentification (MQTT est capable d'\u00eatre d\u00e9ploy\u00e9 sans chiffrement TLS ou SSL.) Utilis\u00e9 par nombreux acteurs dans le monde Facebook, openstack, geospatial, Bosh, IBM, Adarfuit, EVERYTHING IoT, Google Home Assistant, Pimatic, MS Azure, certains syst\u00e8mes de signalisation, syst\u00e8mes d'alarme, l'industrie du Gaz, de l'\u00e9lectricit\u00e9 et bien plus encore. MQTT focntionne sur le principe de publication/abonnement (publish/subscribe)","title":"MQTT"},{"location":"MQTT/#cest-quoi-un-broker-mqtt","text":"Vous pouvez envoyer une commande pour contr\u00f4ler une sortie ou vous pouvez la lire \u00e0 partir d'un capteur et la publier. Dans Mqtt, il y a quelques concepts de base que vous devez comprendre : publier et souscrire des messages, des topics et des broker. Le premier concept est le syst\u00e8me de publication et d'abonnement. Qu'est-ce que cela signifie ? Cela signifie que le dispositif peut publier des messages \u00e0 vos autres dispositifs ou votre dispositif peut s'abonner \u00e0 un sujet particulier.Pour recevoir ces messages, par exemple, le dispositif 1 publie sur un sujet, le dispositif 2 s'abonne au m\u00eame sujet que le dispositif 1 publie. Ainsi, le dispositif 2 re\u00e7oit le message. Les messages sont les informations que vous souhaitez \u00e9changer entre vos appareils, qu'il s'agisse d'une commande ou de donn\u00e9es avec le syst\u00e8me de publication/abonnement. Vous pouvez faire \u00e0 peu pr\u00e8s tout ce que vous voulez dans vos projets de mission en mode autonome. Un autre concept important est celui des topics. Les topics sont la fa\u00e7on dont vous enregistrez l'int\u00e9r\u00eat pour les messages entrants ou je vais sp\u00e9cifier o\u00f9 vous voulez publier votre message. votre message. Les topics sont repr\u00e9sent\u00e9s par des cha\u00eenes de caract\u00e8res s\u00e9par\u00e9es par des barres obliques. Les slashs indiquent le niveau du sujet, voici un exemple si vous cr\u00e9ez maintenant un sujet pour une lampe dans votre propre bureau (home/office/lamp). Par exemple, si vous souhaitez allumer votre lampe dans votre bureau \u00e0 la maison, vous publieriez un message dans un topic en utilisant node-red disant on et votre machine sera abonn\u00e9e \u00e0 ce m\u00eame sujet. Elle recevra donc le message on et allumera finalement la lampe. Les topics sont sensibles \u00e0 la casse : Ce qui fait que home/office/lamp et home/office/Lamp sont diff\u00e9rents. Faites attention au terme borker : le broker est principalement responsable de la r\u00e9ception de tous les messages. Le broker MQTT est un equipement intermediaire entre le publisher et l'abon\u00e9e, il filtre les messages pour d\u00e9cider qui est int\u00e9ress\u00e9 et publie ensuite le message aux clients abonn\u00e9s. Il y a plusieurs brokers que vous pouvez utiliser. Nous allons utiliser le broker mosquito que vous installerez sur votre raspberry pi.","title":"C\u2019est quoi un broker MQTT ?"},{"location":"MQTT/#installer-mosquitto-sur-linux-ou-raspberry-pi","text":"D'abord mettons \u00e0 jour notre syst\u00e8me avant d\u2019installer Mosquito ce n'est pas obligatoire mais recommand\u00e9. sudo apt update && apt upgrade Maintenant installons Mosquitto sudo apt install mosquitto Pour faire des tests il faut installer Mosquitto client sudo apt-get install mosquitto-clients Ici nos tests se baseront justes sur Lunix, si jamais vous voulez installer Mosquito pour Rasperry Pi , installer mosquitto_sub, mosquitto_pub et mosquitto_passwVous voulez faire du mosquito en python? Alors je vous conseille python-mosquitto Exemple de server pour vos test: Server de test Pour verifier l'insatllation systemctl status mosquitto","title":"Installer Mosquitto sur Linux ou Raspberry Pi"},{"location":"MQTT/#installer-mosquitto-sur-windows-ou-macos","text":"Pour Windows ou macos je vous recommande de t\u00e9l\u00e9charger et installer via ce lien","title":"Installer Mosquitto sur Windows ou macOS"},{"location":"MQTT/#securise-mosquitto","text":"Maintenant on a Mosquitto qui fonctionne bien sur notre machine. Mais pas s\u00e9curis\u00e9, maintenant s\u00e9curisons le! Creons un user avec un password Pour cela tapez cd /etc/mosquitto Vous n'avez pas besoin de vous identifier tant que vous ne faite pas une gestion de votre domotique DIY car pour la domotique vous serez amen\u00e9 \u00e0 s\u00e9curiser vos appareils car sinon tout le monde peut acc\u00e9der \u00e0 appareils(chauffage, climatisation, motorisation de volets roulants.....). Donc le mieux c'est de les prot\u00e9ger avec un mot de passe. sudo mosquitto_passwd -c /etc/mosquitto/passwd USER_NAME Afin de limiter l'acc\u00e8s aux utilisateurs \u00e0 un compte, modifiez le fichier de configuration. Pour cela tapez la commande: sudo /etc/mosquitto/mosquitto.conf Ajoutez ceci \u00e0 la fin du fichier allow_anonymous false password_file /etc/mosquitto/passwordfile Maintenant on redemarre Mosquitto systemctl restart mosquitto","title":"S\u00e9curis\u00e9 Mosquitto"},{"location":"MQTT/#publier-envoyer-un-message-mqtt-depuis-le-terminal","text":"Pour publier un message on utilise la commande mosquitto_pub et pour connaitre les options li\u00e9es \u00e0 la commande on utilise mosquitto_pub -help -h spcifie le nom du broker sur le quel on se connecte (ou IP) -t spcifie le topic sur lequel le message est publi\u00e9 -P spcifie le mot de passe (optionnel) -m spcifie le message \u00e0 envoyer qui peut \u00eatre une valeur ou un JSON. -u spcifie le nom d\u2019utilisateur (optionnel) -p spcifie le port, qui par d\u00e9faut est 1883 Pour plus d'information voir documentation Exemple , on se connecte au serveur -h localhost sur le Topic -t news/football et on publie le message -m j'ai gagn\u00e9 le ballon d'or mosquitto_pub -h localhost -t news/football -m \"jai gagn\u00e9 le ballon d'or!\"","title":"Publier (envoyer) un message MQTT depuis le terminal"},{"location":"MQTT/#recevoir-souscrire-des-messages","text":"Pour recevoir un message on utilise la commande mosquitto_sub et pour connaitre les options li\u00e9es \u00e0 la commande on utilise mosquitto_sub -help Ouvrez un second Terminal et ex\u00e9cutez la commande suivant. mosquitto_sub -h localhost -t news/football Exemple d'\u00e9change: \u00e0 gauche le publisher et \u00e0 droite le subscriber","title":"Recevoir (souscrire) des messages"},{"location":"MQTT/#conclusion","text":"Dans ce tutoriel nous avons parl\u00e9 des avantages et inconv\u00e9nients de MQTT. Nous avons install\u00e9 et test\u00e9 MQTT en utilisant le serveur mosquito sur Lunix. Pour ceux qui ont Windows ou macos nous les avons redirig\u00e9 vers la documentation de Mosquito. Rappelons que MQTT est un protocole TCP/IP utilis\u00e9 beaucoup dans l'IoT industriel.Il est le protocole parfait pour votre domotique et est super bien adapt\u00e9 au d\u00e9veloppement d\u2019objets connect\u00e9s vus sa rapidit\u00e9 et sa lergert\u00e9.","title":"Conclusion"},{"location":"Python/","text":"Python D\u00e9marrer avec python Un autre language Python!! C'est un langage de programmation multiplateforme que nous pouvons donc ex\u00e9cuter sur plusieurs plates-formes telles que Windows, macOS, Linux et a m\u00eame \u00e9t\u00e9 port\u00e9 sur les machines virtuelles. Il est totalement gratuit et open source. Ohh mince j'ai Lunix! Si vous avez Lunix ou Mac vous verrez qu'il est d\u00e9j\u00e0 install\u00e9 sauf que la plupart des versions install\u00e9es sont obsol\u00e8tes donc c'est \u00e0 vous d'installer la nouvelle version ou la version de travaille qu'il vous faut. Dans ce tutoriel nous travaillerons exclusivement sur Ubuntu Installation Je vous mets le lien de la documentation pour le t\u00e9l\u00e9chargement ou l'obtention du package. T\u00e9l\u00e9chargez la derni\u00e8re version de Python. Plus specifiquement pour Ubuntu: Mis \u00e0 jour des paquages et install\u00e9 les pr\u00e9requis: sudo apt update sudo apt install software-properties-common Ajoutez le PPA deadsnakes \u00e0 la liste des sources de votre syst\u00e8me ( c'est quoi un PPA? ): sudo add-apt-repository ppa:deadsnakes/ppa Maintenant installons python 3.9: sudo apt install python3.9 V\u00e9rifions si python s'est bien install\u00e9: python3.9 --version Mon premier programme En haut nous avons install\u00e9 python3.9, maintenant \u00e9crivons notre premier programme en python. The Basics Les Variables Ehh bien figurez-vosu q'une variable est une place o\u00f9 on peut stoker des informations Vous pouvez stoker tout ce que vous voulez Nom = \"Barry\" print(Nom) age = 3 taille = 2.01 liste_nombre = [1,2,3,4] Nom , age, taille = \"Barry\", 3, 2.01 Operators Bon les calculs c'est pas trop le truc de tout le monde. Tous les types de calculs sont faisable sur python. >>> x = 45 //addition >>> x + 2 47 //soustraction >>> x - 2 43 >>> y = 2.5 >>> x - y 42.5 //multiplication >>> x * 3 135 >>> (x * 10) + y 452.5 //division >>> 5 // 4 1 >>> 8 // 4 2 //le modulo >>> 5 % 4 1 >>> 8 % 4 0 Les operations sur les chaines de caract\u00e8res >>> chaine = \"Coucou\" >>> chaine 'Coucou' >>> chaine + \" Fatou\" 'Coucou Fatou' >>> chaine * 3 'CoucouCoucouCoucou' Bon \u00e0 partir d'ici je vous partage mon experience avec python, c'est \u00e0 dire ce que j'apprend et que j'ia appris depuis quelques mois. List comprehension La compr\u00e9hension de liste \"List comprehension\" vous permet de cr\u00e9er une liste bas\u00e9e sur les valeurs d'une liste existante. Synthaxe: newlist = [expression for item in list] Exemple: >>> nouvelle_list = [ letter for letter in 'Coucou' ] >>> print( nouvelle_list) ['C', 'o', 'u', 'c', 'o', 'u'] Loops Functions Classes Design pattern Working with Dates Working with Files Fetching Data from Internet Modules D\u00e9corateurs","title":"Python"},{"location":"Python/#python","text":"","title":"Python"},{"location":"Python/#demarrer-avec-python","text":"Un autre language Python!! C'est un langage de programmation multiplateforme que nous pouvons donc ex\u00e9cuter sur plusieurs plates-formes telles que Windows, macOS, Linux et a m\u00eame \u00e9t\u00e9 port\u00e9 sur les machines virtuelles. Il est totalement gratuit et open source. Ohh mince j'ai Lunix! Si vous avez Lunix ou Mac vous verrez qu'il est d\u00e9j\u00e0 install\u00e9 sauf que la plupart des versions install\u00e9es sont obsol\u00e8tes donc c'est \u00e0 vous d'installer la nouvelle version ou la version de travaille qu'il vous faut. Dans ce tutoriel nous travaillerons exclusivement sur Ubuntu","title":"D\u00e9marrer avec python"},{"location":"Python/#installation","text":"Je vous mets le lien de la documentation pour le t\u00e9l\u00e9chargement ou l'obtention du package. T\u00e9l\u00e9chargez la derni\u00e8re version de Python. Plus specifiquement pour Ubuntu: Mis \u00e0 jour des paquages et install\u00e9 les pr\u00e9requis: sudo apt update sudo apt install software-properties-common Ajoutez le PPA deadsnakes \u00e0 la liste des sources de votre syst\u00e8me ( c'est quoi un PPA? ): sudo add-apt-repository ppa:deadsnakes/ppa Maintenant installons python 3.9: sudo apt install python3.9 V\u00e9rifions si python s'est bien install\u00e9: python3.9 --version","title":"Installation"},{"location":"Python/#mon-premier-programme","text":"En haut nous avons install\u00e9 python3.9, maintenant \u00e9crivons notre premier programme en python.","title":"Mon premier programme"},{"location":"Python/#the-basics","text":"","title":"The Basics"},{"location":"Python/#les-variables","text":"Ehh bien figurez-vosu q'une variable est une place o\u00f9 on peut stoker des informations Vous pouvez stoker tout ce que vous voulez Nom = \"Barry\" print(Nom) age = 3 taille = 2.01 liste_nombre = [1,2,3,4] Nom , age, taille = \"Barry\", 3, 2.01","title":"Les Variables"},{"location":"Python/#operators","text":"Bon les calculs c'est pas trop le truc de tout le monde. Tous les types de calculs sont faisable sur python. >>> x = 45 //addition >>> x + 2 47 //soustraction >>> x - 2 43 >>> y = 2.5 >>> x - y 42.5 //multiplication >>> x * 3 135 >>> (x * 10) + y 452.5 //division >>> 5 // 4 1 >>> 8 // 4 2 //le modulo >>> 5 % 4 1 >>> 8 % 4 0 Les operations sur les chaines de caract\u00e8res >>> chaine = \"Coucou\" >>> chaine 'Coucou' >>> chaine + \" Fatou\" 'Coucou Fatou' >>> chaine * 3 'CoucouCoucouCoucou'","title":"Operators"},{"location":"Python/#list-comprehension","text":"La compr\u00e9hension de liste \"List comprehension\" vous permet de cr\u00e9er une liste bas\u00e9e sur les valeurs d'une liste existante. Synthaxe: newlist = [expression for item in list] Exemple: >>> nouvelle_list = [ letter for letter in 'Coucou' ] >>> print( nouvelle_list) ['C', 'o', 'u', 'c', 'o', 'u']","title":"List comprehension"},{"location":"Python/#loops","text":"","title":"Loops"},{"location":"Python/#functions","text":"","title":"Functions"},{"location":"Python/#classes","text":"","title":"Classes"},{"location":"Python/#design-pattern","text":"","title":"Design pattern"},{"location":"Python/#working-with-dates","text":"","title":"Working with Dates"},{"location":"Python/#working-with-files","text":"","title":"Working with Files"},{"location":"Python/#fetching-data-from-internet","text":"","title":"Fetching Data from Internet"},{"location":"Python/#modules","text":"","title":"Modules"},{"location":"Python/#decorateurs","text":"","title":"D\u00e9corateurs"},{"location":"Ubuntu-commandes/","text":"Quelques commandes Ubuntu Commencez par mettre \u00e0 jour le syst\u00e8me et obtenez la derni\u00e8re version stable de curl pour Ubuntu : sudo apt update sudo apt upgrade Tapez la commande apt ou la commande apt-get suivante sudo apt install curl","title":"Quelques commandes Ubuntu"},{"location":"Ubuntu-commandes/#quelques-commandes-ubuntu","text":"Commencez par mettre \u00e0 jour le syst\u00e8me et obtenez la derni\u00e8re version stable de curl pour Ubuntu : sudo apt update sudo apt upgrade Tapez la commande apt ou la commande apt-get suivante sudo apt install curl","title":"Quelques commandes Ubuntu"},{"location":"apache-benchmark/","text":"Apache Benchmark Stresser son site Dr\u00f4le hein ? Mais je suis s\u00e9rieuse il faut simuler un grand flux d'utilisation de son site pour \u00e9viter que son site plante. Pour cela vous pouvez utiliser l''outil de test des performances du serveur HTTP Apache Pour plus d'info apache-bench-docs Installez apache2-utils sudo apt-get install apache2-utils Notez que cela n'a pas besoin d'\u00eatre install\u00e9 sur le m\u00eame serveur sur lequel vous souhaitez ex\u00e9cuter le test. Vous pouvez l'installer m\u00eame sur votre bureau local Ubuntu et ex\u00e9cuter le test vers une URL sp\u00e9cifique Ex\u00e9cution d'un test de r\u00e9sistance ab -c 100 -n 500 -r https://mon-site.com/ -c: le nombre de requ\u00eates multiples \u00e0 ex\u00e9cuter \u00e0 la fois. -n: le nombre de requ\u00eates \u00e0 effectuer pour la session de benchmarking. -r: signifie ne quitte pas en cas d'erreur de r\u00e9ception de socket. Dans notre cas, la requ\u00eate fera simultan\u00e9ment 100 requ\u00eates/seconde et en fera au total 500. source : plus d'informations","title":"Apache Benchmark"},{"location":"apache-benchmark/#apache-benchmark","text":"","title":"Apache Benchmark"},{"location":"apache-benchmark/#stresser-son-site","text":"Dr\u00f4le hein ? Mais je suis s\u00e9rieuse il faut simuler un grand flux d'utilisation de son site pour \u00e9viter que son site plante. Pour cela vous pouvez utiliser l''outil de test des performances du serveur HTTP Apache Pour plus d'info apache-bench-docs","title":"Stresser son site"},{"location":"apache-benchmark/#installez-apache2-utils","text":"sudo apt-get install apache2-utils Notez que cela n'a pas besoin d'\u00eatre install\u00e9 sur le m\u00eame serveur sur lequel vous souhaitez ex\u00e9cuter le test. Vous pouvez l'installer m\u00eame sur votre bureau local Ubuntu et ex\u00e9cuter le test vers une URL sp\u00e9cifique","title":"Installez apache2-utils"},{"location":"apache-benchmark/#execution-dun-test-de-resistance","text":"ab -c 100 -n 500 -r https://mon-site.com/ -c: le nombre de requ\u00eates multiples \u00e0 ex\u00e9cuter \u00e0 la fois. -n: le nombre de requ\u00eates \u00e0 effectuer pour la session de benchmarking. -r: signifie ne quitte pas en cas d'erreur de r\u00e9ception de socket. Dans notre cas, la requ\u00eate fera simultan\u00e9ment 100 requ\u00eates/seconde et en fera au total 500. source : plus d'informations","title":"Ex\u00e9cution d'un test de r\u00e9sistance"},{"location":"callback-function/","text":"Callback fonction \"A\" est une fonction callback si elle prend en argument une fonction \"B\" et elle appelle \"B\" dans sa d\u00e9finition. Exemple JS function A(B) { B(); } Exemple python Fonction anonyme:","title":"Callback fonction"},{"location":"callback-function/#callback-fonction","text":"\"A\" est une fonction callback si elle prend en argument une fonction \"B\" et elle appelle \"B\" dans sa d\u00e9finition.","title":"Callback fonction"},{"location":"callback-function/#exemple-js","text":"function A(B) { B(); }","title":"Exemple JS"},{"location":"callback-function/#exemple-python","text":"","title":"Exemple python"},{"location":"callback-function/#fonction-anonyme","text":"","title":"Fonction anonyme:"},{"location":"docker/","text":"Docker Introduction \ud83e\udd14 Bahh je dirais que c'est comme le bateau qui contient beacoups de containers, ils sont sur le m\u00eame beateau mais chacun est isol\u00e9 des autres selon son contenu mais ils peuvent communiquer entre eux par des canaux bien d\u00e9finis(le r\u00e9seau=> network). Un contenair docker est une image en execution. ohhh a new word \ud83d\ude35? Oui mais je vous l'explique, une image Docker repr\u00e9sente le syst\u00e8me de fichiers, sans les processus. ... Par contre un conteneur est l'ex\u00e9cution d'une image : il poss\u00e8de la copie du syst\u00e8me de fichiers de l'image, ainsi que la capacit\u00e9 de lancer des processus. En gros, c'est un OS, avec lequel vous pouvez interagir Quoi encore? \ud83d\ude32 Les volumes Docker: c'est un endroit qu'on cr\u00e9e pour pr\u00e9server les donn\u00e9es g\u00e9n\u00e9r\u00e9es par le conteneur en cours d'ex\u00e9cution . Ils sont stock\u00e9s sur l'h\u00f4te, ind\u00e9pendamment du cycle de vie du conteneur. Cela permet aux utilisateurs de sauvegarder facilement des donn\u00e9es et de partager des syst\u00e8mes de fichiers entre les conteneurs Fonctionnement Installation Je rappel que si vous avez Windows vous allez avoir besoin de ce tutorial installe on windows Pour Lunix: Enlever l'ancienne version si existe sudo apt-get remove docker docker-engine docker.io containerd runc Installe Docker: sudo apt-get update sudo apt-get install \\ ca-certificates \\ curl \\ gnupg \\ lsb-release Rajouter les GPG Key : curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg si vous n'avez pas curl install\u00e9 alors faite le ici Exemple d'image Recupere une image de docker hub voici le liens o\u00f9 trouver la liste des images que vous pouvez recuperer les images docker pull ubuntu:22.04 Alpine Alpine Linux est une distribution Linux. Qui est leg\u00e8re et est parfait pour les petits syst\u00e8me d'exploitation l'image ne fait que 5 Mo. docker pull alpine:3.15.0 Cr\u00e9ation d'un container docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...] Exemple: docker run -it --pid=container:my-redis my_strace_docker_image bash Cr\u00e9eation d'un volume docker volume create [OPTIONS] [VOLUME] Exemple: docker run -d \\ --name devtest \\ -v myvol2:/app \\ nginx:latest Dockerfile Bahhh ce fichier contient la mani\u00e8re dont on cr\u00e9e notre image, au lieu de le faire en ligne de commande on peut le faire dans un fichier dont la maintenance est facile. FROM python:3.7-alpine WORKDIR /code ENV FLASK_APP=app.py ENV FLASK_RUN_HOST=0.0.0.0 RUN apk add --no-cache gcc musl-dev linux-headers COPY requirements.txt requirements.txt RUN pip install -r requirements.txt EXPOSE 5000 COPY . . CMD [\"flask\", \"run\"] Docker-compose Installation Vous trouverez ici tout ce qu'il vous faut sur Docker-compose sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose Appliquez les autorisations ex\u00e9cutables au binaire ici la doc sudo chmod +x /usr/local/bin/docker-compose Utilisation Rappelons que ce fichier contient notre docker run commande Exemple de docker-compose version: \"3.9\" services: web: build: . ports: - \"5000:5000\" redis: image: \"redis:alpine\" Commandes utiles Container Management CLIs docker run image : cr\u00e9e le container et le lance docker start container: lance le container docker stop container: arr\u00eate le container docker kill container: tue le container docker restart container: arr\u00eate le container et le lance docker pause container: suspend le container docker rm container: detruit le container Inspection du conteneur docker ps : liste l'ensemble des container en cours d'execution docker ps -a: liste tous containers docker logs [-f] container: liste les logs Interagir avec le conteneur et images docker attach container : rejoint le container en cours mais si on l'arret il tue le container en cours docker exec container args..: lance un container docker images: liste toutes les images docker pull repo[:tag]: pull une image du registry docker push repo[:tag]: push une image du registry docker images: liste toutes les images Conclusion Nous arrivons \u00e0 la fin de notre tutorial, pour plus d'informations je vous recommande la documentation du Docker dont j'ai mis le liens en bas dans les ressources. Sources : Docker cheat sheet","title":"Docker"},{"location":"docker/#docker","text":"","title":"Docker"},{"location":"docker/#introduction","text":"\ud83e\udd14 Bahh je dirais que c'est comme le bateau qui contient beacoups de containers, ils sont sur le m\u00eame beateau mais chacun est isol\u00e9 des autres selon son contenu mais ils peuvent communiquer entre eux par des canaux bien d\u00e9finis(le r\u00e9seau=> network). Un contenair docker est une image en execution. ohhh a new word \ud83d\ude35? Oui mais je vous l'explique, une image Docker repr\u00e9sente le syst\u00e8me de fichiers, sans les processus. ... Par contre un conteneur est l'ex\u00e9cution d'une image : il poss\u00e8de la copie du syst\u00e8me de fichiers de l'image, ainsi que la capacit\u00e9 de lancer des processus. En gros, c'est un OS, avec lequel vous pouvez interagir Quoi encore? \ud83d\ude32 Les volumes Docker: c'est un endroit qu'on cr\u00e9e pour pr\u00e9server les donn\u00e9es g\u00e9n\u00e9r\u00e9es par le conteneur en cours d'ex\u00e9cution . Ils sont stock\u00e9s sur l'h\u00f4te, ind\u00e9pendamment du cycle de vie du conteneur. Cela permet aux utilisateurs de sauvegarder facilement des donn\u00e9es et de partager des syst\u00e8mes de fichiers entre les conteneurs","title":"Introduction"},{"location":"docker/#fonctionnement","text":"","title":"Fonctionnement"},{"location":"docker/#installation","text":"Je rappel que si vous avez Windows vous allez avoir besoin de ce tutorial installe on windows Pour Lunix: Enlever l'ancienne version si existe sudo apt-get remove docker docker-engine docker.io containerd runc Installe Docker: sudo apt-get update sudo apt-get install \\ ca-certificates \\ curl \\ gnupg \\ lsb-release Rajouter les GPG Key : curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg si vous n'avez pas curl install\u00e9 alors faite le ici","title":"Installation"},{"location":"docker/#exemple-dimage","text":"Recupere une image de docker hub voici le liens o\u00f9 trouver la liste des images que vous pouvez recuperer les images docker pull ubuntu:22.04 Alpine Alpine Linux est une distribution Linux. Qui est leg\u00e8re et est parfait pour les petits syst\u00e8me d'exploitation l'image ne fait que 5 Mo. docker pull alpine:3.15.0","title":"Exemple d'image"},{"location":"docker/#creation-dun-container","text":"docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...] Exemple: docker run -it --pid=container:my-redis my_strace_docker_image bash","title":"Cr\u00e9ation d'un container"},{"location":"docker/#creeation-dun-volume","text":"docker volume create [OPTIONS] [VOLUME] Exemple: docker run -d \\ --name devtest \\ -v myvol2:/app \\ nginx:latest","title":"Cr\u00e9eation d'un volume"},{"location":"docker/#dockerfile","text":"Bahhh ce fichier contient la mani\u00e8re dont on cr\u00e9e notre image, au lieu de le faire en ligne de commande on peut le faire dans un fichier dont la maintenance est facile. FROM python:3.7-alpine WORKDIR /code ENV FLASK_APP=app.py ENV FLASK_RUN_HOST=0.0.0.0 RUN apk add --no-cache gcc musl-dev linux-headers COPY requirements.txt requirements.txt RUN pip install -r requirements.txt EXPOSE 5000 COPY . . CMD [\"flask\", \"run\"]","title":"Dockerfile"},{"location":"docker/#docker-compose","text":"","title":"Docker-compose"},{"location":"docker/#installation_1","text":"Vous trouverez ici tout ce qu'il vous faut sur Docker-compose sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose Appliquez les autorisations ex\u00e9cutables au binaire ici la doc sudo chmod +x /usr/local/bin/docker-compose","title":"Installation"},{"location":"docker/#utilisation","text":"Rappelons que ce fichier contient notre docker run commande Exemple de docker-compose version: \"3.9\" services: web: build: . ports: - \"5000:5000\" redis: image: \"redis:alpine\"","title":"Utilisation"},{"location":"docker/#commandes-utiles","text":"Container Management CLIs docker run image : cr\u00e9e le container et le lance docker start container: lance le container docker stop container: arr\u00eate le container docker kill container: tue le container docker restart container: arr\u00eate le container et le lance docker pause container: suspend le container docker rm container: detruit le container Inspection du conteneur docker ps : liste l'ensemble des container en cours d'execution docker ps -a: liste tous containers docker logs [-f] container: liste les logs Interagir avec le conteneur et images docker attach container : rejoint le container en cours mais si on l'arret il tue le container en cours docker exec container args..: lance un container docker images: liste toutes les images docker pull repo[:tag]: pull une image du registry docker push repo[:tag]: push une image du registry docker images: liste toutes les images","title":"Commandes utiles"},{"location":"docker/#conclusion","text":"Nous arrivons \u00e0 la fin de notre tutorial, pour plus d'informations je vous recommande la documentation du Docker dont j'ai mis le liens en bas dans les ressources. Sources : Docker cheat sheet","title":"Conclusion"},{"location":"github-actions/","text":"Github actions github copilot sublime merge Control Flow","title":"Github actions"},{"location":"github-actions/#github-actions","text":"","title":"Github actions"},{"location":"github-actions/#github-copilot","text":"","title":"github copilot"},{"location":"github-actions/#sublime-merge","text":"","title":"sublime merge"},{"location":"github-actions/#control-flow","text":"","title":"Control Flow"},{"location":"gitlab_ci/","text":"GitLab actions .gitlab-ci.yml","title":"GitLab actions"},{"location":"gitlab_ci/#gitlab-actions","text":"","title":"GitLab actions"},{"location":"gitlab_ci/#gitlab-ciyml","text":"","title":".gitlab-ci.yml"},{"location":"happy-path-and-edge-cases/","text":"Happy path and edge cases Alors je viens avec un nouveau concepte qui est tr\u00e8s important dans les tests. C'est le \"edge cases and happy path\" deux termes contraires mais tr\u00e8s iimportant. Nous les definirons dans la section qui est en bas et ainsi nous donerons un exemple de chacun. Edge cases Happy path","title":"Happy path and edge cases"},{"location":"happy-path-and-edge-cases/#happy-path-and-edge-cases","text":"Alors je viens avec un nouveau concepte qui est tr\u00e8s important dans les tests. C'est le \"edge cases and happy path\" deux termes contraires mais tr\u00e8s iimportant. Nous les definirons dans la section qui est en bas et ainsi nous donerons un exemple de chacun.","title":"Happy path and edge cases"},{"location":"happy-path-and-edge-cases/#edge-cases","text":"","title":"Edge cases"},{"location":"happy-path-and-edge-cases/#happy-path","text":"","title":"Happy path"},{"location":"login-avec-google-react/","text":"React: login avec google","title":"React: login avec google"},{"location":"login-avec-google-react/#react-login-avec-google","text":"","title":"React: login avec google"},{"location":"npm-vs-npx/","text":"NPM vs NPX: npx: un ex\u00e9cuteur de packages npm NPX- Un outil pour ex\u00e9cuter des packages Node qui contient NPM version 5.2+ une commande lancer par NPX, NPX v\u00e9rifiera si cette commande existe dans $PATH ou dans les binaires du projet local et l'ex\u00e9cutera. npx mes-packages Un autre avantage majeur de npxest la possibilit\u00e9 d'ex\u00e9cuter un package qui n'a pas \u00e9t\u00e9 pr\u00e9c\u00e9demment install\u00e9 npx create-react-app my-app NPM: En lan\u00e7ant npm install mes-packages pourrait installer un paquet localement sur un certain projet Supposons maintenant que vous souhaitez que NodeJS ex\u00e9cute ce package \u00e0 partir de la ligne de commande Il faudrait lancer la commande en pr\u00e9cisant le chemin du package ./node_modules/.bin/mes-packages plus d'information sur NPM","title":"NPM vs NPX:"},{"location":"npm-vs-npx/#npm-vs-npx","text":"","title":"NPM vs NPX:"},{"location":"npm-vs-npx/#npx-un-executeur-de-packages-npm","text":"NPX- Un outil pour ex\u00e9cuter des packages Node qui contient NPM version 5.2+ une commande lancer par NPX, NPX v\u00e9rifiera si cette commande existe dans $PATH ou dans les binaires du projet local et l'ex\u00e9cutera. npx mes-packages Un autre avantage majeur de npxest la possibilit\u00e9 d'ex\u00e9cuter un package qui n'a pas \u00e9t\u00e9 pr\u00e9c\u00e9demment install\u00e9 npx create-react-app my-app","title":"npx: un ex\u00e9cuteur de packages npm"},{"location":"npm-vs-npx/#npm","text":"En lan\u00e7ant npm install mes-packages pourrait installer un paquet localement sur un certain projet Supposons maintenant que vous souhaitez que NodeJS ex\u00e9cute ce package \u00e0 partir de la ligne de commande Il faudrait lancer la commande en pr\u00e9cisant le chemin du package ./node_modules/.bin/mes-packages plus d'information sur NPM","title":"NPM:"},{"location":"python-commandes/","text":"Commandes utiles Cette commande permet de connaitre les packages install\u00e9s dans notre projet python3 -m pip freeze G\u00e9n\u00e9rez un \"requirements file\" , puis installez les packages \u00e0 partir de celui-ci dans un autre environnement. python3 -m pip freeze >> requirements.txt","title":"Commandes utiles"},{"location":"python-commandes/#commandes-utiles","text":"Cette commande permet de connaitre les packages install\u00e9s dans notre projet python3 -m pip freeze G\u00e9n\u00e9rez un \"requirements file\" , puis installez les packages \u00e0 partir de celui-ci dans un autre environnement. python3 -m pip freeze >> requirements.txt","title":"Commandes utiles"},{"location":"react-native/","text":"React Native Hey encore une chose de decouvert \ud83d\ude01 Parlons React mais pas just React mais native qui signifie que notre application tournera sur ios et android car React Native est cross-plateform. J'ai decouvert React et je partage l'aventure avec vous \ud83e\udd37. c'\u00e9tait un monde dans une planete \ud83c\udf20 lointaine mais proche de Angular. D\u00e9marrer Hi \ud83d\udc4b!!!! Alors installons tout ce dont on a besoin pour commencer Installe NodeJs sudo apt install nodejs Verifier l'installation node --version Installe Expo CLI J'ai decouvert ce framwork \"expo\" qui est magnifique, je vous mets le lien \ud83d\udc49 EXPO npm install --global expo-cli Cr\u00e9er un projet expo init books Demarrer l'application expo start Les composants capitaux Nous avons 7 composants principaux Un composant est une classe(transmettre des props) ou une fonction(mais elle renvoie rarement des props). La mani\u00e8re la plus simple de definir un component est de cr\u00e9er une fonction JavaScript. Nous appelons ces composants \"composants de fonction\" car il s'agit litt\u00e9ralement de fonctions JavaScript. import React from \"react\"; import { Text, View } from \"react-native\"; const HelloWorldApp = () => { return ( <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\", }} > <Text>Hello, world!</Text> </View> ); }; export default HelloWorldApp; Les deux composants ci-dessus sont \u00e9quivalents du point de vue de React. import React, { Component } from \"react\"; import { Text, View } from \"react-native\"; class HelloWorldApp extends Component { render() { return ( <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\", }} > <Text>Hello, world!</Text> </View> ); } } export default HelloWorldApp; 1- Les Vues(View) Les vues ici sont appell\u00e9es \"user interface view sur Ios et android view sur android\", sachez aussi que dans cette planette il faut d\u00e9composer son application en composants \u26a0\ufe0f tout en \u00e9vitant d'avoir une panopluie de composant. Car, ceci est d\u00e9conseill\u00e9. Style in line signifie que nous aurons deux accolades \"{{}}\" au niveau de style et on ne va pas l'\u00e9crire sur plusieurs lignes La premi\u00e8re signifie JavaScript et le second car c'est en inline //Dans App.js import React from \"react\"; import { Text, View } from \"react-native\"; const App = () => { return <View style={{ borderWidth: 1, height: 150, width: 150 }}></View>; }; export default App; Bon \u00e9coutez je ne vais pas faire un cours, donc je vous donne encore un truc que je viens juste de capter. Le mot cl\u00e9 Export Le mots cl\u00e9 \"export\" pour utiliser un composant dans un autre il faut que dans le fichier o\u00f9 est defini le component l'exporter apr\u00e8s sa definition, et l'importer dans le fichier o\u00f9 on l'utilise. Ehh bhenn je viens de dire une chose truvial l\u00e0 \ud83d\ude05 mais bon voici un exmple 2- Le composant Text React n'accept pas les textes brutes donc il faut un composant texte pour la manipulation de texte //Dans App.js <Text style={{ color:\"white\", fontSize:20, fontWeight:\"bold\"}}>Bonjour Monsieur</Text> 3- Le composant StyleSheet comme son nom l'indique il permet d'ecrire du css plus styl\u00e9 \ud83d\ude0e //Dans App.js import React from \"react\"; import { Text, View, StyleSheet } from \"react-native\"; const App = () => { return ( <View style={styles.container}> <Text style={styles.text}>Bonjour Monsieur</Text> </View> ); }; const styles = StyleSheet.create({ container: { borderWidth: 1, height: \"100%\", width: \"100%\", backgroundColor: \"green\", justifyContent: \"center\", alignItems: \"center\", }, text: { color: \"white\", fontSize: 20, fontWeight: \"bold\", }, }); export default App; 4- Le composant textInput Un composant sans enfant\ud83d\ude27? Ehh oui c'est quand on le ferme juste \u00e0 la fin avec un \"/\" Au fur et \u00e0 mesure qu'on ecrit dans un champs de saisie React fait la mise \u00e0 jour donc pour eviter d'effacer ce que l'on \u00e9crit on utilise state. //Dans App.js import React, { useState } from \"react\"; import { Text, View, StyleSheet, TextInput } from \"react-native\"; const App = () => { const [state, setState] = useState(\"\"); return ( <View style={styles.container}> <Text style={styles.text}>Bonjour Monsieur</Text> <TextInput style={styles.input} placeholder=\"Saisir du texte\" value={state} onChangeText={(value) => setState(value)} /> </View> ); }; const styles = StyleSheet.create({ container: { flex: 1, borderWidth: 1, flexDirection: \"column\", height: \"100%\", width: \"100%\", backgroundColor: \"green\", justifyContent: \"center\", alignItems: \"center\", }, text: { color: \"white\", fontSize: 20, fontWeight: \"bold\", paddingBottom: 20, }, input: { borderWidth: 1, height: 30, width: 300, fontSize: 25, color: \"black\", }, }); export default App; Props et State Parlons des state et de props: Les props nous permettent de contr\u00f4ler un component, En langage plus technique, ils sont accessibles en lecture uniquement par le component fils. Attention,ne pensez pas que les props d'un component ne peuvent pas changer. Elles le peuvent ; simplement, c'est le component parent qui va les changer. C'est l\u00e0 qu'intervient \"state\" il nous permet de r\u00e9cuperer les nouvelles donn\u00e9es avec setState et indiquer \u00e0 React que le component a besoin d'\u00eatre re-rendu avec ces nouvelles donn\u00e9es. const [tasks, setTask] = useState([ { title: \"Nouvelle tache\", completed: false }, ]); Le state et les props g\u00e8rent les donn\u00e9es de vos components. 5- Le composant Image Soit from assets: importer d'abord l'image import LOGO from \"./assets/imgs.png\"; puis on lui met du css logo: { width: 66, height: 58, margin: 10, }, Enfin on met l'image dans une vue <View style={styles.containerIm}> <Image style={styles.logo} source={LOGO} /> </View> soit from une URL: <View style={styles.containerIm}> <Image style={styles.logo} source={{uri: \"https://reactnative.dev/img/tiny_logo.png\"}} /> </View> 6- Le composant ScrollView Il permet de faire defiler notre \u00e9cran quand on aura beaucoup d'\u00e9l\u00e9ments \u00e0 afficher. 7- Le composant FlatList FlatList fait en sorte que lorsque nos informations sont sur le point d'appara\u00eetre, il supprime les \u00e9l\u00e9ments qui d\u00e9filent hors de l'\u00e9cran pour \u00e9conomiser de la m\u00e9moire et du temps de traitement. Egalement si vous voulez afficher des s\u00e9parateurs entre vos \u00e9l\u00e9ments, plusieurs colonnes, un chargement de d\u00e9filement infini ou tout autre nombre d'autres fonctionnalit\u00e9s qu'il prend en charge imm\u00e9diatement. Code source: \ud83d\udc49here Navigation Installation\u200b Installons les packqges dont ont a besoin dans le projet sudo npm install @react-navigation/native sudo expo install react-native-gesture-handler react-native-reanimated react-native-screens react-native-safe-area-context @react-native-community/masked-view sudo npm install @react-navigation/stack Les touchables: TouchableOpacity Sources: openClassRooms React native doc","title":"React Native"},{"location":"react-native/#react-native","text":"Hey encore une chose de decouvert \ud83d\ude01 Parlons React mais pas just React mais native qui signifie que notre application tournera sur ios et android car React Native est cross-plateform. J'ai decouvert React et je partage l'aventure avec vous \ud83e\udd37. c'\u00e9tait un monde dans une planete \ud83c\udf20 lointaine mais proche de Angular.","title":"React Native"},{"location":"react-native/#demarrer","text":"Hi \ud83d\udc4b!!!! Alors installons tout ce dont on a besoin pour commencer","title":"D\u00e9marrer"},{"location":"react-native/#installe-nodejs","text":"sudo apt install nodejs","title":"Installe NodeJs"},{"location":"react-native/#verifier-linstallation","text":"node --version","title":"Verifier l'installation"},{"location":"react-native/#installe-expo-cli","text":"J'ai decouvert ce framwork \"expo\" qui est magnifique, je vous mets le lien \ud83d\udc49 EXPO npm install --global expo-cli","title":"Installe Expo CLI"},{"location":"react-native/#creer-un-projet","text":"expo init books","title":"Cr\u00e9er un projet"},{"location":"react-native/#demarrer-lapplication","text":"expo start","title":"Demarrer l'application"},{"location":"react-native/#les-composants-capitaux","text":"Nous avons 7 composants principaux Un composant est une classe(transmettre des props) ou une fonction(mais elle renvoie rarement des props). La mani\u00e8re la plus simple de definir un component est de cr\u00e9er une fonction JavaScript. Nous appelons ces composants \"composants de fonction\" car il s'agit litt\u00e9ralement de fonctions JavaScript. import React from \"react\"; import { Text, View } from \"react-native\"; const HelloWorldApp = () => { return ( <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\", }} > <Text>Hello, world!</Text> </View> ); }; export default HelloWorldApp; Les deux composants ci-dessus sont \u00e9quivalents du point de vue de React. import React, { Component } from \"react\"; import { Text, View } from \"react-native\"; class HelloWorldApp extends Component { render() { return ( <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\", }} > <Text>Hello, world!</Text> </View> ); } } export default HelloWorldApp;","title":"Les composants capitaux"},{"location":"react-native/#1-les-vuesview","text":"Les vues ici sont appell\u00e9es \"user interface view sur Ios et android view sur android\", sachez aussi que dans cette planette il faut d\u00e9composer son application en composants \u26a0\ufe0f tout en \u00e9vitant d'avoir une panopluie de composant. Car, ceci est d\u00e9conseill\u00e9. Style in line signifie que nous aurons deux accolades \"{{}}\" au niveau de style et on ne va pas l'\u00e9crire sur plusieurs lignes La premi\u00e8re signifie JavaScript et le second car c'est en inline //Dans App.js import React from \"react\"; import { Text, View } from \"react-native\"; const App = () => { return <View style={{ borderWidth: 1, height: 150, width: 150 }}></View>; }; export default App; Bon \u00e9coutez je ne vais pas faire un cours, donc je vous donne encore un truc que je viens juste de capter.","title":"1- Les Vues(View)"},{"location":"react-native/#2-le-composant-text","text":"React n'accept pas les textes brutes donc il faut un composant texte pour la manipulation de texte //Dans App.js <Text style={{ color:\"white\", fontSize:20, fontWeight:\"bold\"}}>Bonjour Monsieur</Text>","title":"2- Le composant Text"},{"location":"react-native/#3-le-composant-stylesheet","text":"comme son nom l'indique il permet d'ecrire du css plus styl\u00e9 \ud83d\ude0e //Dans App.js import React from \"react\"; import { Text, View, StyleSheet } from \"react-native\"; const App = () => { return ( <View style={styles.container}> <Text style={styles.text}>Bonjour Monsieur</Text> </View> ); }; const styles = StyleSheet.create({ container: { borderWidth: 1, height: \"100%\", width: \"100%\", backgroundColor: \"green\", justifyContent: \"center\", alignItems: \"center\", }, text: { color: \"white\", fontSize: 20, fontWeight: \"bold\", }, }); export default App;","title":"3- Le composant StyleSheet"},{"location":"react-native/#4-le-composant-textinput","text":"Un composant sans enfant\ud83d\ude27? Ehh oui c'est quand on le ferme juste \u00e0 la fin avec un \"/\" Au fur et \u00e0 mesure qu'on ecrit dans un champs de saisie React fait la mise \u00e0 jour donc pour eviter d'effacer ce que l'on \u00e9crit on utilise state. //Dans App.js import React, { useState } from \"react\"; import { Text, View, StyleSheet, TextInput } from \"react-native\"; const App = () => { const [state, setState] = useState(\"\"); return ( <View style={styles.container}> <Text style={styles.text}>Bonjour Monsieur</Text> <TextInput style={styles.input} placeholder=\"Saisir du texte\" value={state} onChangeText={(value) => setState(value)} /> </View> ); }; const styles = StyleSheet.create({ container: { flex: 1, borderWidth: 1, flexDirection: \"column\", height: \"100%\", width: \"100%\", backgroundColor: \"green\", justifyContent: \"center\", alignItems: \"center\", }, text: { color: \"white\", fontSize: 20, fontWeight: \"bold\", paddingBottom: 20, }, input: { borderWidth: 1, height: 30, width: 300, fontSize: 25, color: \"black\", }, }); export default App;","title":"4- Le composant textInput"},{"location":"react-native/#props-et-state","text":"Parlons des state et de props: Les props nous permettent de contr\u00f4ler un component, En langage plus technique, ils sont accessibles en lecture uniquement par le component fils. Attention,ne pensez pas que les props d'un component ne peuvent pas changer. Elles le peuvent ; simplement, c'est le component parent qui va les changer. C'est l\u00e0 qu'intervient \"state\" il nous permet de r\u00e9cuperer les nouvelles donn\u00e9es avec setState et indiquer \u00e0 React que le component a besoin d'\u00eatre re-rendu avec ces nouvelles donn\u00e9es. const [tasks, setTask] = useState([ { title: \"Nouvelle tache\", completed: false }, ]); Le state et les props g\u00e8rent les donn\u00e9es de vos components.","title":"Props  et State"},{"location":"react-native/#5-le-composant-image","text":"","title":"5- Le composant Image"},{"location":"react-native/#soit-from-assets","text":"importer d'abord l'image import LOGO from \"./assets/imgs.png\"; puis on lui met du css logo: { width: 66, height: 58, margin: 10, }, Enfin on met l'image dans une vue <View style={styles.containerIm}> <Image style={styles.logo} source={LOGO} /> </View>","title":"Soit from assets:"},{"location":"react-native/#soit-from-une-url","text":"<View style={styles.containerIm}> <Image style={styles.logo} source={{uri: \"https://reactnative.dev/img/tiny_logo.png\"}} /> </View>","title":"soit from une URL:"},{"location":"react-native/#6-le-composant-scrollview","text":"Il permet de faire defiler notre \u00e9cran quand on aura beaucoup d'\u00e9l\u00e9ments \u00e0 afficher.","title":"6- Le composant ScrollView"},{"location":"react-native/#7-le-composant-flatlist","text":"FlatList fait en sorte que lorsque nos informations sont sur le point d'appara\u00eetre, il supprime les \u00e9l\u00e9ments qui d\u00e9filent hors de l'\u00e9cran pour \u00e9conomiser de la m\u00e9moire et du temps de traitement. Egalement si vous voulez afficher des s\u00e9parateurs entre vos \u00e9l\u00e9ments, plusieurs colonnes, un chargement de d\u00e9filement infini ou tout autre nombre d'autres fonctionnalit\u00e9s qu'il prend en charge imm\u00e9diatement. Code source: \ud83d\udc49here","title":"7- Le composant FlatList"},{"location":"react-native/#navigation","text":"","title":"Navigation"},{"location":"react-native/#installation","text":"Installons les packqges dont ont a besoin dans le projet sudo npm install @react-navigation/native sudo expo install react-native-gesture-handler react-native-reanimated react-native-screens react-native-safe-area-context @react-native-community/masked-view sudo npm install @react-navigation/stack","title":"Installation\u200b"},{"location":"react-native/#les-touchables","text":"","title":"Les touchables:"},{"location":"react-native/#touchableopacity","text":"Sources: openClassRooms React native doc","title":"TouchableOpacity"},{"location":"readmeee/","text":"Installation de l'environnement de travaille git clone git@github.com:soowcode/soowcode.github.io.git Puis install les packages necessaires pour le lancement du projet que vous trouverez dans le fichier requierements.txt pip install -r requirements.txt lancer le projet Se deplacer dans le dossier du projet cloner et lancer: mkdocs serve","title":"Readmeee"},{"location":"readmeee/#installation-de-lenvironnement-de-travaille","text":"git clone git@github.com:soowcode/soowcode.github.io.git Puis install les packages necessaires pour le lancement du projet que vous trouverez dans le fichier requierements.txt pip install -r requirements.txt","title":"Installation de l'environnement de travaille"},{"location":"readmeee/#lancer-le-projet","text":"Se deplacer dans le dossier du projet cloner et lancer: mkdocs serve","title":"lancer le projet"},{"location":"spring-boot/","text":"Spring boot Dans ce tutoriel nous verons comment en utilisant les starter cr\u00e9e une petite application en spring boot. Si comme moi, vous avez galer\u00e9 dans l'installation de l'environnement alors let's go together.","title":"Spring boot"},{"location":"spring-boot/#spring-boot","text":"Dans ce tutoriel nous verons comment en utilisant les starter cr\u00e9e une petite application en spring boot. Si comme moi, vous avez galer\u00e9 dans l'installation de l'environnement alors let's go together.","title":"Spring boot"},{"location":"tests/","text":"Tests Differents types de tests en utlisant \u00e0 la fin pytest My project Tech Stack Client: React, Redux, TailwindCSS Server: Node, Express Contributing Contributions are always welcome! See contributing.md for ways to get started. Please adhere to this project's code of conduct . Installation Install my-project with npm npm install my-project cd my-project Environment Variables To run this project, you will need to add the following environment variables to your .env file API_KEY ANOTHER_API_KEY Running Tests To run tests, run the following command npm run test Deployment To deploy this project run npm run deploy Authors @avneesh0612 \ud83d\ude80 About Me I'm a full-stack developer... Hi, I'm Avneesh! \ud83d\udc4b \ud83d\udd17 Links \ud83d\udee0 Skills Javascript, HTML, CSS... License MIT","title":"Tests"},{"location":"tests/#tests","text":"","title":"Tests"},{"location":"tests/#differents-types-de-tests-en-utlisant-a-la-fin-pytest","text":"","title":"Differents types de tests en utlisant \u00e0 la fin pytest"},{"location":"tests/#my-project","text":"","title":"My project"},{"location":"tests/#tech-stack","text":"Client: React, Redux, TailwindCSS Server: Node, Express","title":"Tech Stack"},{"location":"tests/#contributing","text":"Contributions are always welcome! See contributing.md for ways to get started. Please adhere to this project's code of conduct .","title":"Contributing"},{"location":"tests/#installation","text":"Install my-project with npm npm install my-project cd my-project","title":"Installation"},{"location":"tests/#environment-variables","text":"To run this project, you will need to add the following environment variables to your .env file API_KEY ANOTHER_API_KEY","title":"Environment Variables"},{"location":"tests/#running-tests","text":"To run tests, run the following command npm run test","title":"Running Tests"},{"location":"tests/#deployment","text":"To deploy this project run npm run deploy","title":"Deployment"},{"location":"tests/#authors","text":"@avneesh0612","title":"Authors"},{"location":"tests/#about-me","text":"I'm a full-stack developer...","title":"\ud83d\ude80 About Me"},{"location":"tests/#hi-im-avneesh","text":"","title":"Hi, I'm Avneesh! \ud83d\udc4b"},{"location":"tests/#links","text":"","title":"\ud83d\udd17 Links"},{"location":"tests/#skills","text":"Javascript, HTML, CSS...","title":"\ud83d\udee0 Skills"},{"location":"tests/#license","text":"MIT","title":"License"}]}